// <auto-generated />
using GymLoggerAPI.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymLoggerAPI.Migrations
{
    [DbContext(typeof(GymLoggerContext))]
    [Migration("20241013230953_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymLoggerAPI.Models.Exercise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Exercise", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "Push bar upwards with arms",
                            Name = "Bench Press"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "Push bar upwards with legs",
                            Name = "Barbell Squat"
                        });
                });

            modelBuilder.Entity("GymLoggerAPI.Models.ExerciseMuscle", b =>
                {
                    b.Property<long>("ExerciseId")
                        .HasColumnType("bigint");

                    b.Property<long>("MuscleId")
                        .HasColumnType("bigint");

                    b.HasKey("ExerciseId", "MuscleId");

                    b.HasIndex("MuscleId");

                    b.ToTable("ExerciseMuscle");

                    b.HasData(
                        new
                        {
                            ExerciseId = 1L,
                            MuscleId = 1L
                        },
                        new
                        {
                            ExerciseId = 2L,
                            MuscleId = 4L
                        },
                        new
                        {
                            ExerciseId = 2L,
                            MuscleId = 10L
                        });
                });

            modelBuilder.Entity("GymLoggerAPI.Models.Muscle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Muscle", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Chest"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Biceps"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Triceps"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Quadriceps"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Calves"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Shoulders"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "Lats"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "Upper back"
                        },
                        new
                        {
                            Id = 9L,
                            Name = "Mid back"
                        },
                        new
                        {
                            Id = 10L,
                            Name = "Hamstrings"
                        });
                });

            modelBuilder.Entity("GymLoggerAPI.Models.ExerciseMuscle", b =>
                {
                    b.HasOne("GymLoggerAPI.Models.Exercise", null)
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymLoggerAPI.Models.Muscle", null)
                        .WithMany()
                        .HasForeignKey("MuscleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
